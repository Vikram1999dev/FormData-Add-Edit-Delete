{"ast":null,"code":"var _jsxFileName = \"E:\\\\ALLPROJECTS\\\\FULLSTACK-WEB\\\\test\\\\client\\\\src\\\\test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dob, setDob] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [gender, setGender] = useState('');\n  const [qualification, setQualification] = useState([]);\n  const navigate = new useNavigate();\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCheckboxChange = event => {\n    const {\n      value\n    } = event.target;\n    const selectedIndex = qualification.indexOf(value);\n    setQualification(prevSelectedCheckboxes => {\n      if (selectedIndex === -1) {\n        return [...prevSelectedCheckboxes, value];\n      }\n      const newSelectedCheckboxes = [...prevSelectedCheckboxes];\n      newSelectedCheckboxes.splice(selectedIndex, 1);\n      return newSelectedCheckboxes;\n    });\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      await axios.post('http://localhost:3001/upload', formData);\n      alert('Image uploaded successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to upload image.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"gmx/hQv6aG7d1i3nAMKF9o0ChtM=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Test","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","dob","setDob","selectedFile","setSelectedFile","gender","setGender","qualification","setQualification","navigate","handleFileChange","event","target","files","handleCheckboxChange","value","selectedIndex","indexOf","prevSelectedCheckboxes","newSelectedCheckboxes","splice","handleUpload","formData","FormData","append","post","alert","error","console","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/ALLPROJECTS/FULLSTACK-WEB/test/client/src/test.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Test() {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [gender, setGender] = useState('');\r\n  const [qualification, setQualification] = useState([]);\r\n  const navigate = new useNavigate();\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const { value } = event.target;\r\n    const selectedIndex = qualification.indexOf(value);\r\n\r\n    setQualification((prevSelectedCheckboxes) => {\r\n      if (selectedIndex === -1) {\r\n        return [...prevSelectedCheckboxes, value];\r\n      }\r\n\r\n      const newSelectedCheckboxes = [...prevSelectedCheckboxes];\r\n      newSelectedCheckboxes.splice(selectedIndex, 1);\r\n      return newSelectedCheckboxes;\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      await axios.post('http://localhost:3001/upload', formData);\r\n      alert('Image uploaded successfully!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to upload image.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type='file' onChange={handleFileChange} accept='image/*' />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMuB,QAAQ,GAAG,IAAIrB,WAAW,EAAE;EAElC,MAAMsB,gBAAgB,GAAIC,KAAK,IAAK;IAClCP,eAAe,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACtC,MAAM;MAAEI;IAAM,CAAC,GAAGJ,KAAK,CAACC,MAAM;IAC9B,MAAMI,aAAa,GAAGT,aAAa,CAACU,OAAO,CAACF,KAAK,CAAC;IAElDP,gBAAgB,CAAEU,sBAAsB,IAAK;MAC3C,IAAIF,aAAa,KAAK,CAAC,CAAC,EAAE;QACxB,OAAO,CAAC,GAAGE,sBAAsB,EAAEH,KAAK,CAAC;MAC3C;MAEA,MAAMI,qBAAqB,GAAG,CAAC,GAAGD,sBAAsB,CAAC;MACzDC,qBAAqB,CAACC,MAAM,CAACJ,aAAa,EAAE,CAAC,CAAC;MAC9C,OAAOG,qBAAqB;IAC9B,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAClB,YAAY,EAAE;IAEnB,MAAMmB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAErB,YAAY,CAAC;IAEtC,IAAI;MACF,MAAMhB,KAAK,CAACsC,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,CAAC;MAC1DI,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEpC,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAOwC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB,gBAAiB;MAACsB,MAAM,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClE9C,OAAA;MAAQ+C,OAAO,EAAEhB,YAAa;MAAAQ,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV;AAAC5C,EAAA,CAnDQD,IAAI;AAAA+C,EAAA,GAAJ/C,IAAI;AAqDb,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}