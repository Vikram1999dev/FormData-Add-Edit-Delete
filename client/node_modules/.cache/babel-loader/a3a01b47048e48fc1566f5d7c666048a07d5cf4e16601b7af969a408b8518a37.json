{"ast":null,"code":"var _jsxFileName = \"E:\\\\ALLPROJECTS\\\\FULLSTACK-WEB\\\\test\\\\client\\\\src\\\\display.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card from './card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [formData, setFormData] = useState([]);\n  useEffect(() => {\n    const fetchFormData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/grabformdata');\n        setFormData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchFormData();\n  }, []);\n  const updateFormData = (id, updatedData) => {\n    const updatedFormData = formData.map(data => {\n      if (data._id === id) {\n        return {\n          ...data,\n          ...updatedData\n        };\n      }\n      return data;\n    });\n    setFormData(updatedFormData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: formData.length > 0 ? formData.map(singleData => /*#__PURE__*/_jsxDEV(Card, {\n      id: singleData._id,\n      firstName: singleData.firstName,\n      lastName: singleData.lastName,\n      email: singleData.email,\n      url: singleData.imageUrl,\n      updateFormData: updateFormData // Pass callback function\n    }, singleData._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"lokSdkSLZfErX0cQNfNp9SJ3li8=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","jsxDEV","_jsxDEV","Display","_s","formData","setFormData","fetchFormData","response","get","data","error","console","updateFormData","id","updatedData","updatedFormData","map","_id","className","children","length","singleData","firstName","lastName","email","url","imageUrl","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ALLPROJECTS/FULLSTACK-WEB/test/client/src/display.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './card';\r\n\r\nconst Display = () => {\r\n  const [formData, setFormData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFormData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/grabformdata');\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchFormData();\r\n  }, []);\r\n\r\n  const updateFormData = (id, updatedData) => {\r\n    const updatedFormData = formData.map((data) => {\r\n      if (data._id === id) {\r\n        return { ...data, ...updatedData };\r\n      }\r\n      return data;\r\n    });\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  return (\r\n    <div className='card-grid'>\r\n      {formData.length > 0 ? (\r\n        formData.map((singleData) => (\r\n          <Card\r\n            key={singleData._id}\r\n            id={singleData._id}\r\n            firstName={singleData.firstName}\r\n            lastName={singleData.lastName}\r\n            email={singleData.email}\r\n            url={singleData.imageUrl}\r\n            updateFormData={updateFormData} // Pass callback function\r\n          />\r\n        ))\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;QACtEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDJ,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAGA,CAACC,EAAE,EAAEC,WAAW,KAAK;IAC1C,MAAMC,eAAe,GAAGX,QAAQ,CAACY,GAAG,CAAEP,IAAI,IAAK;MAC7C,IAAIA,IAAI,CAACQ,GAAG,KAAKJ,EAAE,EAAE;QACnB,OAAO;UAAE,GAAGJ,IAAI;UAAE,GAAGK;QAAY,CAAC;MACpC;MACA,OAAOL,IAAI;IACb,CAAC,CAAC;IACFJ,WAAW,CAACU,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBf,QAAQ,CAACgB,MAAM,GAAG,CAAC,GAClBhB,QAAQ,CAACY,GAAG,CAAEK,UAAU,iBACtBpB,OAAA,CAACF,IAAI;MAEHc,EAAE,EAAEQ,UAAU,CAACJ,GAAI;MACnBK,SAAS,EAAED,UAAU,CAACC,SAAU;MAChCC,QAAQ,EAAEF,UAAU,CAACE,QAAS;MAC9BC,KAAK,EAAEH,UAAU,CAACG,KAAM;MACxBC,GAAG,EAAEJ,UAAU,CAACK,QAAS;MACzBd,cAAc,EAAEA,cAAe,CAAC;IAAA,GAN3BS,UAAU,CAACJ,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAQtB,CAAC,gBAEF7B,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC3B,EAAA,CA7CID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}